export const source = `
import * as React from "react";
import {
  Avatar,
  ListItemText,
  ListItemAvatar,
  ListItemButton,
  List,
  Paper,
  BottomNavigation,
  BottomNavigationAction,
} from "@basetoolkit/ui";

function refreshMessages() {
  const getRandomInt = (max) => Math.floor(Math.random() * Math.floor(max));

  return Array.from(new Array(50)).map(
    () => messageExamples[getRandomInt(messageExamples.length)]
  );
}

export default function FixedBottomNavigation() {
  const [value, setValue] = React.useState(0);
  const ref = React.useRef(null);
  const [messages, setMessages] = React.useState(() => refreshMessages());

  React.useEffect(() => {
    ref.current.ownerDocument.body.scrollTop = 0;
    setMessages(refreshMessages());
  }, [value, setMessages]);

  return (
    <div style={{ paddingBottom: 7, width: "100%" ,position:"relative"}} ref={ref}>
      <List style={{height:400,overflowY:"auto"}}>
        {messages.map(({ primary, secondary, person }, index) => (
          <ListItemButton key={index + person}>
            <ListItemAvatar>
              <Avatar alt="Profile Picture" src={person} />
            </ListItemAvatar>
            <ListItemText primary={primary} secondary={secondary} />
          </ListItemButton>
        ))}
      </List>
      <Paper
        sx={{ position: "absolute", bottom: 0, left: 0, right: 0 }}
        elevation={3}
      >
        <BottomNavigation
          showLabels
          value={value}
          onChange={(event, newValue) => {
            setValue(newValue);
          }}
        >
          <BottomNavigationAction label="Recents" icon={"restore"} />
          <BottomNavigationAction label="Favorites" icon={"favorite"} />
          <BottomNavigationAction label="Archive" icon={"archive"} />
        </BottomNavigation>
      </Paper>
    </div>
  );
}

const messageExamples = [
  {
    primary: "Brunch this week?",
    secondary:
      "I'll be in the neighbourhood this week. Let's grab a bite to eat",
    person:   "https://tse4.mm.bing.net/th?id=OIP.IrJSe207eQF64kILfjypIwHaHa&pid=Api&P=0&h=220"    ,
  },
  {
    primary: "Birthday Gift",
    secondary: \`Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.\`,
    person: "https://tse4.mm.bing.net/th?id=OIP.0p9Uc6Q1ZN1cyUfReUTOFAHaHa&pid=Api&P=0&h=220",
  },
  {
    primary: "Recipe to try",
    secondary:
      "I am try out this new BBQ recipe, I think this might be amazing",
    person: "https://tse3.mm.bing.net/th?id=OIP.XjvTFFI032NhXwhUTp7QUAHaHa&pid=Api&P=0&h=220",
  },
  {
    primary: "Yes!",
    secondary: "I have the tickets to the ReactConf for this year.",
    person: "https://tse3.mm.bing.net/th?id=OIP.HsKmJ4YBxPLOor-msjRyOAHaHa&pid=Api&P=0&h=220",
  },
  {
    primary: "Doctor's Appointment",
    secondary:
      "My appointment for the doctor was rescheduled for next Saturday.",
    person: "https://tse2.mm.bing.net/th?id=OIP.vBH5Byp8zaP4QyuQxtpzqwHaHa&pid=Api&P=0&h=220",
  },
  {
    primary: "Discussion",
    secondary: \`Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.\`,
    person: "https://tse1.mm.bing.net/th?id=OIP.VkAMJ7tPlTf22T4vZ2ozjgHaHa&pid=Api&P=0&h=220",
  },
  {
    primary: "Summer BBQ",
    secondary: \`Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.\`,
    person: "https://tse4.mm.bing.net/th?id=OIP.x7BxPfPVRYSFkqD9ZatItQHaHa&pid=Api&P=0&h=220",
  },
];
`;
